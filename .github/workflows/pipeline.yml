name: Deployment pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches: [master]
    types: [opened, synchronize]

env:
  TEST_MONGODB_URI: ${{ secrets.TEST_MONGODB_URI }}
  PORT: ${{ secrets.PORT }}
  SECRET: ${{ secrets.SECRET }}
  TEST: ${{ secrets.TEST }}

jobs:
  pipeline:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      - name: npm install
        run: npm install
      - name: lint
        run: npm run lint
      # - name: build
      #   run: npm run build
      - name: test
        run: npm test
        env:
          TEST_MONGODB_URI: ${{ secrets.TEST_MONGODB_URI }}
          PORT: ${{ secrets.PORT }}
          SECRET: ${{ secrets.SECRET }}
          TEST: ${{ secrets.TEST }}

      - name: e2e tests
        # https://github.com/cypress-io/github-action
        uses: cypress-io/github-action@v2
        with:
          command: npm run test:e2e
          start: npm run start:test
          # wait for the server to start: https://github.com/cypress-io/github-action
          wait-on: http://localhost:3001

      # # third party notification action (action-slack: https://github.com/marketplace/actions/action-slack)
      # - uses: 8398a7/action-slack@b6a4c791ce0c137843eb11e038f855cf567014dc
      #   if: ${{ github.event_name == 'push' && !contains(github.event.head_commit.message, '#skip') && success()}}
      #   with:
      #     status: custom
      #     fields: commit,author,took # selectable (default: repo,message). Check https://action-slack.netlify.app/fields
      #     custom_payload: |
      #       {
      #         attachments: [{
      #           color: 'good',
      #           title: 'Successful Heroku Deployment',
      #           text: `A new version deployed to https://ndeamador-fso2020-pokedex.herokuapp.com/ (${process.env.AS_COMMIT}) by ${process.env.AS_AUTHOR}\nBuild took ${process.env.AS_TOOK}`
      #         }]
      #       }
      #   env:
      #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
      # # failure notification (not custom):
      # - uses: 8398a7/action-slack@b6a4c791ce0c137843eb11e038f855cf567014dc
      #   if: ${{ github.event_name == 'push' && !contains(github.event.head_commit.message, '#skip') && (failure() || cancelled()) }}
      #   with:
      #     status: ${{ job.status }}
      #     fields: repo,message,commit,author,took # selectable (default: repo,message). Check https://action-slack.netlify.app/fields
      #   env:
      #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required

  versioning:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      # The following step increases the version when a pull request is merged and tag the release with a version number.
      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@eca2b69f9e2c24be7decccd0f15fdb1ea5906598 # the string after the @ is the version hash in the third party library, specified in order to prevent issues in case the contents of the numbered version are changed. https://fullstackopen.com/en/part11/keeping_green#a-note-about-using-third-party-actions
        if: ${{ github.event_name == 'push' && !contains(github.event.head_commit.message, '#skip')}}
        env:
          # because github-tag-action is third party, we need to provide the token for authentication in the repository.
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch

  Logs:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: console messages
        run: |
          echo 'condition: ${{ github.event_name == 'push' && !contains(github.event.head_commit.message, '#skip')}}'
          echo 'title contains #skip:  ${{ contains(github.event.head_commit.message, '#skip')}}'
          echo "head_commit: ${{github.event.head_commit.message}}"
          echo "github.base_ref: ${{github.base_ref}}"
          echo "github.head_ref: ${{github.head_ref}}"
          echo "github.event_name: ${{github.event_name}}"
          echo "title contains ${{contains(github.event.head_commit.message, 'contain_test')}}"
          echo "title doesn't ${{contains(github.event.head_commit.message, 'nothing')}}"
          echo "event url: ${{github.event.url}}"
          echo "event id: ${{github.event.id}}"
      - name: gihub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: commits
        env:
          COMMITS: ${{ toJson(github.event.commits) }}
        run: echo "$COMMITS"
      - name: commit messages
        env:
          COMMIT_MESSAGES: ${{ toJson(github.event.commits.*.message) }}
        run: echo "$COMMIT_MESSAGES"
